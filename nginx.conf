# Enable debug logging globally
error_log /var/log/nginx/error.log debug;

stream {
    # Global stream timeout settings - apply to all stream servers as defaults
    proxy_connect_timeout 10s;  # Default connection timeout to upstream
    proxy_timeout 30s;          # Default data transfer timeout (read/send combined)
    
    log_format basic '$remote_addr [$time_local] $protocol $status $bytes_sent $bytes_received $session_time';
    access_log /var/log/nginx/stream-access.log basic;

    map $ssl_preread_server_name $k3s_upstream {
        include /etc/nginx/domains.map;  # Dynamic mapping from external file
        default 192.168.8.150:6443;      # Fallback cluster
    }

    server {
        listen 16443;
        proxy_pass $k3s_upstream;
        
        # Timeout settings - override global defaults for this server
        proxy_connect_timeout 10s;  # Time to establish connection to upstream
        proxy_timeout 20s;          # Time for data transfer (read/send combined)
        
        # Additional stream settings
        proxy_responses 1;           # Expected number of responses (useful for UDP)
        
        ssl_preread on;  # Enable SNI-based routing
    }
}

events {}

http {
    # Global HTTP timeout settings - prevent 504 Gateway Timeout errors
    proxy_connect_timeout 300s;  # Default connection timeout to upstream
    proxy_send_timeout    300s;  # Default send timeout to upstream  
    proxy_read_timeout    300s;  # Default read timeout from upstream
    send_timeout          300s;  # Default send timeout to client
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # ===== NEW: Dynamic HTTP app upstream mapping =====
    map $host $app_upstream {
        include /etc/nginx/apps.map;     # Dynamic mapping from external file
        default 127.0.0.1:8080;          # Fallback
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # Proxy to Proxmox UI
    server {
        listen 7000 ssl;
        server_name _;

        ssl_certificate     /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        location / {
            proxy_pass https://10.102.75.150:8006/;
            proxy_ssl_verify off;

            proxy_connect_timeout 3600s;
            proxy_send_timeout    3600s;
            proxy_read_timeout    3600s;
            send_timeout          3600s;            
        }
    }

    # Wildcard proxy for *.kubo-test.hexabase.io (K3s API access)
    server {
        listen 443 ssl http2;
        server_name ~^(?<subdomain>.+)\.kubo-test\.hexabase\.io$;

        ssl_certificate     /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        location / {
            proxy_pass https://192.168.8.150:6443;  # Example upstream
            proxy_ssl_verify off;

            proxy_connect_timeout 3600s;
            proxy_send_timeout    3600s;
            proxy_read_timeout    3600s;
            send_timeout          3600s;            
        }
    }

    # ===== NEW: Wildcard proxy for *.apps.kubo-test.hexabase.io =====
    server {
        listen 443 ssl http2;
        # server_name ~^(?<subdomain>.+)\.apps\.kubo-test\.hexabase\.io$;
        server_name *.apps.kubo-test.hexabase.io;


        ssl_certificate     /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        location / {
            proxy_pass https://$app_upstream;                 # HTTPS not HTTP
            proxy_ssl_server_name on;                         # Enable SNI
            proxy_ssl_name $host;                             # Send the original hostname
            proxy_set_header Host $host;                      # Critical for Traefik routing
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_ssl_verify off;                             # if you're okay skipping upstream cert check
            
            # Timeout settings to prevent 504 Gateway Timeout
            proxy_connect_timeout 3600s;  # Connection timeout to upstream
            proxy_send_timeout    3600s;  # Send timeout to upstream
            proxy_read_timeout    3600s;  # Read timeout from upstream
            send_timeout          3600s;  # Send timeout to client
        }
    }

}
